name: 📦 iOS 빌드 & 🚀 TestFlight 배포

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_and_submit:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      id-token: write

    env:
      EXPO_TOKEN: ${{ secrets.EXPO_SECRET_ACCESS_TOKEN }}
      EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 현재 버전 확인
        id: current_version
        run: |
          CURRENT_VERSION=$(grep '"version":' app.json | sed 's/.*"version": "\([^"]*\)".*/\1/')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "현재 버전: $CURRENT_VERSION"

      - name: 새 버전 계산 (patch 버전 증가)
        id: version
        run: |
          VERSION="${{ steps.current_version.outputs.current_version }}"

          # patch 버전 증가 (1.0.0 → 1.0.1)
          IFS='.' read -ra VERSION_PARTS <<< "$VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "새 버전: $NEW_VERSION"

      - name: app.json 업데이트
        run: |
          sed -i 's/"version": "[^"]*"/"version": "'${{ steps.version.outputs.new_version }}'"/' app.json
          echo "app.json 업데이트 완료: ${{ steps.version.outputs.new_version }}"

      - name: 버전 업 커밋
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add app.json
          git commit -m "Malsami 버전 정보 관리 : chore: 버전 ${{ steps.version.outputs.new_version }}" || exit 0
          git push

      - name: Git 태그 생성
        run: |
          git tag "v${{ steps.version.outputs.new_version }}"
          git push origin "v${{ steps.version.outputs.new_version }}"

      - name: 버전 업 완료 알림
        run: |
          echo "버전 업데이트 완료!"
          echo "이전 버전: ${{ steps.current_version.outputs.current_version }}"
          echo "새 버전: ${{ steps.version.outputs.new_version }}"
          echo "커밋: ${{ github.sha }}"

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm install

      - uses: expo/expo-github-action@v8
        with:
          token: ${{ env.EXPO_TOKEN }}
          eas-version: latest

      - name: 🔨 Build & 🚀 Submit to TestFlight
        env:
          WHAT_TO_TEST: |
            🔍 이번 빌드에서 확인해 주세요
            • 신규 로그인 버그 수정
            • 다크모드 UI 개선
            • 성능 최적화 ⚡️
        run: |
          eas build \
            --platform ios \
            --profile production \
            --auto-submit \
            --non-interactive \
            --what-to-test "$WHAT_TO_TEST"

    concurrency:
      group: ios-testflight
      cancel-in-progress: true
